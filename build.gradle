buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url 'http://dl.bintray.com/cjstehno/public'}
        maven { url "https://plugins.gradle.org/m2/"}
        jcenter()
    }
    
    dependencies {
        classpath 'gradle-templates:gradle-templates:1.5'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE'
    }
}
plugins {
	id "org.hidetake.ssh" version "2.1.1"
}

apply plugin:'templates'

allprojects {
    apply plugin: "java"
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenCentral() 
        jcenter()
    }
	
}
subprojects {
    apply plugin: 'application'
    apply plugin: 'spring-boot'
    apply plugin: 'eclipse-wtp'

    eclipse {
        classpath {
            downloadSources = true
        }
    }

    bootRepackage.enabled = false

    sourceCompatibility = java_version
    targetCompatibility = java_version

    ext {
        compileJava.options.encoding = 'UTF-8'
        compileTestJava.options.encoding = 'UTF-8'
    }
    
    dependencies {
        
        compile("org.springframework.boot:spring-boot-starter")
        compile("org.springframework.boot:spring-boot-starter-data-jpa"){
          exclude group: 'org.apache.tomcat', module:'tomcat-jdbc'
        }
        compile("org.springframework.boot:spring-boot-starter-actuator")
        testCompile("org.springframework.boot:spring-boot-starter-test")
        compile("org.springframework:spring-context-support")
        compile "net.sf.ehcache:ehcache:${ehcache_version}"
        compile "joda-time:joda-time:${joda_time_version}"
        compile "com.google.guava:guava:${google_guava_version}"
        compile "javax.inject:javax.inject:${javax_inject_version}"
        compile "org.apache.commons:commons-lang3:${commons_lang3_version}"
        compile "commons-lang:commons-lang:${commons_lang_version}"
        compile "commons-io:commons-io:${commons_io_version}"
        compile "commons-logging:commons-logging:${commons_logging_version}"
        compile("commons-fileupload:commons-fileupload:${commons_fileupload_version}"){
          exclude group: 'commons-io', module: 'commons-io'
        }
        compile "commons-codec:commons-codec:${commons_codec_version}"
        compile "com.alibaba:druid:${druid_version}"
        compile  "org.postgresql:postgresql:${postgresql_version}"
    }
}
def webprojects = [project(':ysx-admin-webapp'),project(':ysx-fish-webapp'),project(':ysx-blog-webapp'),project(':ysx-base-core'),project(':ysx-base-cache'),project(':ysx-base-activeMQ')]
configure(webprojects) { project ->
  apply plugin: 'war'
  springBoot {
      executable = true
  }
  configurations {
    providedRuntime
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-undertow'
  }

  dependencies {
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    compile("org.springframework.boot:spring-boot-starter-freemarker"){
      exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
      exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-el'
    }
    compile("org.springframework.boot:spring-boot-starter-web"){
    }
    compile "org.htmlparser:htmlparser:${htmlparser_version}"
  }
}